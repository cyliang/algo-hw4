# vim: set syntax=python filetype=python:

import msgpack

def distinct_pat(string, length, numAlpha):
	hashTable = [0] * (numAlpha ** length)
	distinctCount = 0
	
	trTable = [None] * 256
	trNo = 0
	newString = [None] * len(string)
	for i, c in enumerate(string):
		c_ascii = ord(c)
		if trTable[c_ascii] is None:
			trTable[c_ascii] = trNo
			trNo += 1

		newString[i] = trTable[c_ascii]

	leftmost = 0
	leftpow = numAlpha ** (length - 1)
	perm = sum([newString[length - 2 - subi] * (numAlpha ** subi) for subi in range(length - 1)])
	for i in range(length - 1, len(newString)):
		perm = (perm - leftmost) * numAlpha + newString[i]
		leftmost = newString[i - length + 1] * leftpow
		if hashTable[perm] == 0:
			distinctCount += 1
			hashTable[perm] = 1

	return distinctCount




with open("input.txt", "rb") as input_file, open("output.txt", "wb") as output_file:
	inPack = msgpack.Unpacker(input_file, use_list = True)

	N = inPack.unpack()
	for i in range(N):
		subLength = inPack.unpack()
		diffChar = inPack.unpack()
		string = inPack.unpack()

		msgpack.pack(distinct_pat(string, subLength, diffChar), output_file)
		
